version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: survey-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_DATABASE:-survey_system}
      MYSQL_USER: ${DB_USERNAME:-survey_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-survey_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - survey-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.0-alpine
    container_name: survey-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - survey-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Survey System Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: survey-app
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      # Server
      SERVER_PORT: 8080
      SERVER_MODE: ${SERVER_MODE:-release}
      
      # Database
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: ${DB_USERNAME:-survey_user}
      DB_PASSWORD: ${DB_PASSWORD:-survey_password}
      DB_DATABASE: ${DB_DATABASE:-survey_system}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-in-production}
      
      # Encryption
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-your-32-byte-encryption-key-here}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - survey-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

networks:
  survey-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
